{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport axios from 'axios';\nexport default {\n  name: 'MenusComponent',\n  props: {\n    restaurant: Object,\n    menus: Array,\n    modif: Boolean\n  },\n  data: () => ({\n    model: [],\n    products: [],\n    reveal: false,\n    dialog: false,\n    validMenu: false,\n    rules: [v => !!v || 'Veuillez renseigner ce champs']\n  }),\n  methods: {\n    addToCart(item) {\n      this.$store.commit('addToCart', item);\n    },\n\n    removeFromCart(item) {\n      this.$store.commit('removeFromCart', item);\n    },\n\n    fetchQuantity(item) {\n      const mp = this.cart.cart.find(mp => mp.id === item.id && mp.name === item.name);\n\n      if (mp) {\n        return mp.quantity;\n      }\n\n      return 0;\n    },\n\n    validateMenu(item) {\n      axios.patch('http://localhost:4600/api/v1/menus/' + item._id, item).catch(error => console.log(error));\n    },\n\n    validateMenuSubmit() {\n      if (this.validMenu) {\n        this.$refs.menuForm.reset();\n      }\n    },\n\n    deleteMenu(item) {\n      axios.delete('http://localhost:4600/api/v1/menus/' + item._id).catch(error => console.log(error));\n      location.reload();\n    },\n\n    productsFromMenu(item) {\n      const productsList = [];\n\n      for (let i = 0; i < this.products.filter(product => product.restaurantId === this.restaurant._id).length; i++) {\n        if (item.products.includes(this.products[i]._id)) {\n          productsList.push(this.products[i].name);\n        }\n      }\n\n      return productsList;\n    }\n\n  },\n  computed: {\n    getAllProducts() {\n      const productsList = [];\n\n      for (let i = 0; i < this.products.filter(product => product.restaurantId === this.restaurant._id).length; i++) {\n        const productCategories = this.products[i].name;\n\n        if (!productsList.includes(productCategories)) {\n          productsList.push(productCategories);\n        }\n      }\n\n      return productsList;\n    },\n\n    ...mapState(['cart'])\n  },\n\n  mounted() {\n    axios.get('http://localhost:4500/api/v1/products/').then(response => this.products = response.data).catch(error => console.log(error));\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AAEA;EACAA,sBADA;EAEAC;IACAC,kBADA;IAEAC,YAFA;IAGAC;EAHA,CAFA;EAOAC;IACAC,SADA;IAEAC,YAFA;IAGAC,aAHA;IAIAC,aAJA;IAKAC,gBALA;IAMAC,QACAC,2CADA;EANA,EAPA;EAiBAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA;;MACA;QACA;MACA;;MACA;IACA,CAbA;;IAcAC;MACAC,oEACAC,KADA,CACAC,2BADA;IAEA,CAjBA;;IAkBAC;MACA;QACA;MACA;IACA,CAtBA;;IAuBAC;MACAJ,+DACAC,KADA,CACAC,2BADA;MAEAG;IACA,CA3BA;;IA4BAC;MACA;;MACA;QACA;UACAC;QACA;MACA;;MACA;IACA;;EApCA,CAjBA;EAuDAC;IACAC;MACA;;MACA;QACA;;QACA;UACAF;QACA;MACA;;MACA;IACA,CAVA;;IAWA,aACA,MADA;EAXA,CAvDA;;EAsEAG;IACAV,oDACAW,IADA,CACAC,yCADA,EAEAX,KAFA,CAEAC,2BAFA;EAGA;;AA1EA","names":["name","props","restaurant","menus","modif","data","model","products","reveal","dialog","validMenu","rules","v","methods","addToCart","removeFromCart","fetchQuantity","validateMenu","axios","catch","error","validateMenuSubmit","deleteMenu","location","productsFromMenu","productsList","computed","getAllProducts","mounted","then","response"],"sourceRoot":"src/components/shop","sources":["MenusComponent.vue"],"sourcesContent":["<template>\n  <div id=\"menus-component\">\n    <v-container>\n      <h3>Menus</h3>\n      <v-row>\n        <v-col style=\"height: 410px;\">\n          <v-sheet class=\"mx-auto\" width=\"100%\">\n            <v-slide-group v-model=\"model\" class=\"pa-4\" multiple show-arrows>\n              <v-slide-item v-for=\"(menu, idx) in menus.filter(menu => menu.restaurantId === restaurant._id)\" :key=\"idx\" v-slot=\"{ active, toggle }\">\n                <v-card outlined class=\"mx-auto\" max-width=\"200\">\n                  <v-img :src=\"menu.image\" height=\"175px\"/>\n                  <v-card-title>{{ menu.name }}</v-card-title>\n                  <v-card-subtitle>{{ menu.price }} €</v-card-subtitle>\n                  <v-card-actions>\n                    <v-btn text color=\"primary\" @click=\"toggle\">Découvrir</v-btn>\n                    <v-spacer></v-spacer>\n\n                    <v-btn v-if=\"modif\" icon class=\"mr-1\">\n                      <v-dialog max-width=\"50%\">\n                        <template v-slot:activator=\"{ on, attrs }\">\n                          <v-btn color=\"primary\" class=\"mx-2\" icon fab small v-bind=\"attrs\" v-on=\"on\">\n                            <v-icon>mdi-pencil</v-icon>\n                          </v-btn>\n                        </template>\n                        <template v-slot:default=\"dialog\">\n                          <v-card>\n                            <v-card-title>\n                              <span class=\"text-h4\">{{ menu.name }}</span>\n                            </v-card-title>\n                            <v-form v-model=\"validMenu\" ref=\"menuForm\" @submit=\"validateMenuSubmit\">\n                              <v-container>\n                                <v-row>\n                                  <v-col cols=\"12\" md=\"5\">\n                                    <v-text-field v-model=\"menu.name\" label=\"Intitulé du menu\" :rules=\"rules\"/>\n                                  </v-col>\n                                  <v-col cols=\"12\" md=\"12\">\n                                    <v-textarea v-model=\"menu.description\" label=\"Description du menu\"/>\n                                  </v-col>\n                                  <v-col cols=\"12\" md=\"4\">\n                                    <v-text-field v-model=\"menu.price\" label=\"Prix du menu\" type=\"number\" :rules=\"rules\"/>\n                                  </v-col>\n                                  <v-col cols=\"8\" md=\"8\">\n                                    <v-text-field v-model=\"menu.image\" label=\"URL du menu\" :rules=\"rules\"/>\n                                  </v-col>\n                                  <v-col cols=\"8\" md=\"4\">\n                                    <v-select v-model=\"menu.products\" :items=\"getAllProducts\" label=\"Produits\" multiple/>\n                                  </v-col>\n                                </v-row>\n                              </v-container>\n                              <v-card-actions>\n                                <v-spacer></v-spacer>\n                                <v-btn @click=\"dialog.value=false\">\n                                  Fermer\n                                </v-btn>\n                                <v-btn @click=\"deleteMenu(menu); dialog.value=false\" color=\"error\">\n                                  <v-icon>mdi-delete</v-icon>\n                                  Supprimer\n                                </v-btn>\n                                <v-btn color=\"primary\" class=\"mr-4\" type=\"submit\" @click=\"validateMenu(menu); dialog.value=false\" :disabled=\"!validMenu\">\n                                  Enregistrer\n                                </v-btn>\n                              </v-card-actions>\n                            </v-form>\n                          </v-card>\n                        </template>\n                      </v-dialog>\n                    </v-btn>\n\n                    <div v-if=\"!modif\" class=\"quantity-container\">\n                      <input class=\"quantity-input\" type=\"number\" :value=\"fetchQuantity(menu)\" disabled/>\n                    </div>\n                    <v-spacer v-if=\"!modif\"></v-spacer>\n                    <div v-if=\"!modif\" class=\"actions-container\">\n                      <v-btn icon class=\"mr-1\" @click=\"addToCart(menu)\">\n                        <v-icon color=\"primary\">mdi-plus-circle</v-icon>\n                      </v-btn>\n                      <v-btn icon class=\"mr-1\" @click=\"removeFromCart(menu)\">\n                        <v-icon color=\"primary\">mdi-minus-circle</v-icon>\n                      </v-btn>\n                    </div>\n                  </v-card-actions>\n                  <v-expand-transition>\n                    <v-card v-if=\"active ? reveal=true : reveal=false\" class=\"transition-fast-in-fast-out v-card--reveal\" style=\"height: 100%;\">\n                      <v-card-title>{{ menu.name }}</v-card-title>\n                      <v-card-subtitle class=\"text-justify\">\n                        <p v-if=\"menu.description\">{{ menu.description.slice(0, 80) + '...' }}</p>\n                        Produits disponibles:\n                        <ul v-for=\"productName in productsFromMenu(menu)\" :key=\"productName\">\n                          <li>{{ productName }}</li>\n                        </ul>\n                      </v-card-subtitle>\n                      <v-card-actions class=\"pt-0\">\n                        <v-btn text color=\"primary\" @click=\"toggle\">Fermer</v-btn>\n                      </v-card-actions>\n                    </v-card>\n                  </v-expand-transition>\n                </v-card>\n              </v-slide-item>\n            </v-slide-group>\n          </v-sheet>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nimport axios from 'axios'\n\nexport default {\n  name: 'MenusComponent',\n  props: {\n    restaurant: Object,\n    menus: Array,\n    modif: Boolean\n  },\n  data: () => ({\n    model: [],\n    products: [],\n    reveal: false,\n    dialog: false,\n    validMenu: false,\n    rules: [\n      v => !!v || 'Veuillez renseigner ce champs'\n    ]\n  }),\n  methods: {\n    addToCart (item) {\n      this.$store.commit('addToCart', item)\n    },\n    removeFromCart (item) {\n      this.$store.commit('removeFromCart', item)\n    },\n    fetchQuantity (item) {\n      const mp = this.cart.cart.find(mp => mp.id === item.id && mp.name === item.name)\n      if (mp) {\n        return mp.quantity\n      }\n      return 0\n    },\n    validateMenu (item) {\n      axios.patch('http://localhost:4600/api/v1/menus/' + item._id, item)\n        .catch(error => console.log(error))\n    },\n    validateMenuSubmit () {\n      if (this.validMenu) {\n        this.$refs.menuForm.reset()\n      }\n    },\n    deleteMenu (item) {\n      axios.delete('http://localhost:4600/api/v1/menus/' + item._id)\n        .catch(error => console.log(error))\n      location.reload()\n    },\n    productsFromMenu (item) {\n      const productsList = []\n      for (let i = 0; i < this.products.filter(product => product.restaurantId === this.restaurant._id).length; i++) {\n        if (item.products.includes(this.products[i]._id)) {\n          productsList.push(this.products[i].name)\n        }\n      }\n      return productsList\n    }\n  },\n  computed: {\n    getAllProducts () {\n      const productsList = []\n      for (let i = 0; i < this.products.filter(product => product.restaurantId === this.restaurant._id).length; i++) {\n        const productCategories = this.products[i].name\n        if (!productsList.includes(productCategories)) {\n          productsList.push(productCategories)\n        }\n      }\n      return productsList\n    },\n    ...mapState([\n      'cart'\n    ])\n  },\n  mounted () {\n    axios.get('http://localhost:4500/api/v1/products/')\n      .then(response => (this.products = response.data))\n      .catch(error => console.log(error))\n  }\n}\n</script>\n\n<style scoped>\n#menus-component .v-card--reveal {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  opacity: 1 !important;\n}\n#menus-component .quantity-container {\n  width: 30%;\n}\n#menus-component .quantity-input {\n  width: 100%;\n  text-align: center;\n  padding: 5px 10px;\n  transform: translate(10px, -2px);\n  outline: none;\n}\n#menus-component .quantity-input::-webkit-inner-spin-button, #menus-component .quantity-input::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n#menus-component .quantity-input {\n  -moz-appearance: textfield;\n}\n#menus-component .actions-container {\n  text-align: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}