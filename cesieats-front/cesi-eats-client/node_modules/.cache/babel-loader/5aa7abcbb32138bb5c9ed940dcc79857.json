{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport $storeUser from '@/store/user';\nexport default {\n  name: 'ValidateOrderComponent',\n  props: {\n    order: {}\n  },\n  data: () => ({\n    user: $storeUser.state.user,\n    deliveryMan: [],\n    validOrder: false,\n    validateOrderDialog: false,\n    show1: true\n  }),\n  methods: {\n    validateOrder() {\n      axios.patch('http://localhost:4400/api/v1/orders/' + this.order._id, {\n        orderState: 'En attente de livraison'\n      }).catch(error => console.log(error));\n      const delivery = {\n        order: this.order,\n        restaurant: this.order.restaurant,\n        date: Date.now(),\n        deliveryState: 'En attente de livraison',\n        deliveryManId: this.deliveryMan.id,\n        customerId: this.order.customerId,\n        location: {\n          city: this.order.location.city,\n          zipCode: this.order.location.zipCode,\n          address: this.order.location.address,\n          latitude: this.order.location.latitude,\n          longitude: this.order.location.longitude\n        }\n      };\n      axios.post('http://localhost:4300/api/v1/deliveries/', delivery).catch(error => console.log(error));\n      location.reload();\n    },\n\n    cancelButtonClick() {\n      this.validateOrderDialog = false;\n      this.$refs.form.reset();\n    },\n\n    validateOrderSubmit() {\n      if (this.validOrder) {\n        this.$refs.form.reset();\n        this.validateOrderDialog = false;\n      }\n    }\n\n  },\n\n  mounted() {\n    axios.get('http://localhost:4300/api/v1/deliveries/deliveryman/').then(response => this.deliveryMan = response.data).catch(error => console.log(error));\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AAEA;EACAA,8BADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC,2BADA;IAEAC,eAFA;IAGAC,iBAHA;IAIAC,0BAJA;IAKAC;EALA,EALA;EAYAC;IACAC;MACAC;QAAAC;MAAA,GACAC,KADA,CACAC,2BADA;MAGA;QACAZ,iBADA;QAEAa,iCAFA;QAGAC,gBAHA;QAIAC,wCAJA;QAKAC,kCALA;QAMAC,iCANA;QAOAC;UACAC,8BADA;UAEAC,oCAFA;UAGAC,oCAHA;UAIAC,sCAJA;UAKAC;QALA;MAPA;MAgBAd,iEACAE,KADA,CACAC,2BADA;MAGAM;IACA,CAzBA;;IA0BAM;MACA;MACA;IACA,CA7BA;;IA8BAC;MACA;QACA;QACA;MACA;IACA;;EAnCA,CAZA;;EAiDAC;IACAjB,kEACAkB,IADA,CACAC,4CADA,EAEAjB,KAFA,CAEAC,2BAFA;EAGA;;AArDA","names":["name","props","order","data","user","deliveryMan","validOrder","validateOrderDialog","show1","methods","validateOrder","axios","orderState","catch","error","restaurant","date","deliveryState","deliveryManId","customerId","location","city","zipCode","address","latitude","longitude","cancelButtonClick","validateOrderSubmit","mounted","then","response"],"sourceRoot":"src/components/shop","sources":["ValidateOrderComponent.vue"],"sourcesContent":["<template>\n    <v-dialog v-model=\"validateOrderDialog\" max-width=\"600px\">\n      <template v-slot:activator=\"{ on, attrs }\">\n        <v-btn v-bind=\"attrs\" v-on=\"on\" color=\"primary\">Valider la commande</v-btn>\n      </template>\n      <v-card>\n        <v-card-title>\n          <span class=\"text-h4\">Valider la commande</span>\n        </v-card-title>\n        <v-form ref=\"form\" v-model=\"validOrder\" @submit.prevent=\"validateOrderSubmit\">\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn @click=\"cancelButtonClick\">Fermer</v-btn>\n            <v-btn class=\"mr-4\" color=\"primary\" @click=\"validateOrder\" :disabled=\"!validOrder\">Valider</v-btn>\n          </v-card-actions>\n        </v-form>\n      </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport axios from 'axios'\nimport $storeUser from '@/store/user'\n\nexport default {\n  name: 'ValidateOrderComponent',\n  props: {\n    order: {}\n  },\n  data: () => ({\n    user: $storeUser.state.user,\n    deliveryMan: [],\n    validOrder: false,\n    validateOrderDialog: false,\n    show1: true\n  }),\n  methods: {\n    validateOrder () {\n      axios.patch('http://localhost:4400/api/v1/orders/' + this.order._id, { orderState: 'En attente de livraison' })\n        .catch(error => console.log(error))\n\n      const delivery = {\n        order: this.order,\n        restaurant: this.order.restaurant,\n        date: Date.now(),\n        deliveryState: 'En attente de livraison',\n        deliveryManId: this.deliveryMan.id,\n        customerId: this.order.customerId,\n        location: {\n          city: this.order.location.city,\n          zipCode: this.order.location.zipCode,\n          address: this.order.location.address,\n          latitude: this.order.location.latitude,\n          longitude: this.order.location.longitude\n        }\n      }\n\n      axios.post('http://localhost:4300/api/v1/deliveries/', delivery)\n        .catch(error => console.log(error))\n\n      location.reload()\n    },\n    cancelButtonClick () {\n      this.validateOrderDialog = false\n      this.$refs.form.reset()\n    },\n    validateOrderSubmit () {\n      if (this.validOrder) {\n        this.$refs.form.reset()\n        this.validateOrderDialog = false\n      }\n    }\n  },\n  mounted () {\n    axios.get('http://localhost:4300/api/v1/deliveries/deliveryman/')\n      .then(response => (this.deliveryMan = response.data))\n      .catch(error => console.log(error))\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}