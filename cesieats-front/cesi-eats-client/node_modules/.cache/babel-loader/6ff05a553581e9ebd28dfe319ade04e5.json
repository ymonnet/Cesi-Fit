{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/user/Documents/CESI/A4/Elctive web/PROJECT/proj/cesieats-front/cesi-eats-client/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $storeCart from '@/store/cart';\nimport axios from 'axios';\nimport ValidateCartComponent from '@/components/shop/ValidateCartComponent';\nexport default {\n  name: 'CartView',\n  components: {\n    ValidateCartComponent: ValidateCartComponent\n  },\n  data: function data() {\n    return {\n      show: false,\n      cart: $storeCart.state.cart,\n      restaurants: []\n    };\n  },\n  methods: {\n    nameForUrl: function nameForUrl(name) {\n      return name.toLowerCase().normalize('NFD').replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '-');\n    },\n    removeFromCart: function removeFromCart(item) {\n      this.$store.commit('removeFromCart', item);\n    },\n    removeAllQuantityFromCart: function removeAllQuantityFromCart(item) {\n      this.$store.commit('removeAllQuantityFromCart', item);\n    },\n    removeAllFromCart: function removeAllFromCart(item) {\n      this.$store.commit('removeAllFromCart', item);\n    }\n  },\n  computed: {\n    getAllRestaurants: function getAllRestaurants() {\n      var _this = this;\n\n      var restaurants = [];\n\n      var _loop = function _loop(i) {\n        var restaurant = _this.restaurants.find(function (restaurant) {\n          return restaurant._id === _this.cart[i].restaurantId;\n        });\n\n        if (restaurant && !restaurants.includes(restaurant)) {\n          restaurants.push(restaurant);\n        }\n      };\n\n      for (var i = 0; i < this.cart.length; i++) {\n        _loop(i);\n      }\n\n      return restaurants;\n    },\n    totalPrice: function totalPrice() {\n      var totalPrice = 0;\n\n      var _iterator = _createForOfIteratorHelper(this.cart),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          totalPrice += item.totalPrice;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return totalPrice.toFixed(2);\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    axios.get('http://localhost:4200/api/v1/restaurants/').then(function (response) {\n      return _this2.restaurants = response.data;\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsGA;AACA;AACA;AAEA;EACAA,gBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IAAA;MACAC,WADA;MAEAC,2BAFA;MAGAC;IAHA;EAAA,CALA;EAUAC;IACAC,UADA,sBACAR,IADA,EACA;MACA,2CACAS,OADA,CACA,aADA,EACA,GADA,EAEAA,OAFA,CAEA,UAFA,EAEA,GAFA;IAGA,CALA;IAMAC,cANA,0BAMAC,IANA,EAMA;MACA;IACA,CARA;IASAC,yBATA,qCASAD,IATA,EASA;MACA;IACA,CAXA;IAYAE,iBAZA,6BAYAF,IAZA,EAYA;MACA;IACA;EAdA,CAVA;EA0BAG;IACAC,iBADA,+BACA;MAAA;;MACA;;MADA,2BAEAC,CAFA;QAGA;UAAA;QAAA;;QACA;UACAV;QACA;MANA;;MAEA;QAAA;MAKA;;MACA;IACA,CAVA;IAWAW,UAXA,wBAWA;MACA;;MADA,2CAEA,SAFA;MAAA;;MAAA;QAEA;UAAA;UACAA;QACA;MAJA;QAAA;MAAA;QAAA;MAAA;;MAKA;IACA;EAjBA,CA1BA;EA6CAC,OA7CA,qBA6CA;IAAA;;IACAC,uDACAC,IADA,CACA;MAAA;IAAA,CADA,EAEAC,KAFA,CAEA;MAAA;IAAA,CAFA;EAGA;AAjDA","names":["name","components","ValidateCartComponent","data","show","cart","restaurants","methods","nameForUrl","replace","removeFromCart","item","removeAllQuantityFromCart","removeAllFromCart","computed","getAllRestaurants","i","totalPrice","mounted","axios","then","catch"],"sourceRoot":"src/views/shop","sources":["CartView.vue"],"sourcesContent":["<template>\n  <div id=\"cart-view\" class=\"mt-3 mb-8\">\n    <v-container class=\"pr-0 pl-0\">\n      <h2>Mon panier</h2>\n      <v-row class=\"mt-2\">\n        <v-col>\n          <v-card outlined v-if=\"getAllRestaurants.length === 0\" class=\"mx-auto mb-5\">\n            <v-card-subtitle class=\"text-center\">Complétez un panier en vous dirigeant vers\n              <a href=\"/restaurants\" title=\"Les restaurants\">les restaurants</a>\n            </v-card-subtitle>\n          </v-card>\n          <v-card outlined v-for=\"restaurant in getAllRestaurants\" :key=\"restaurant._id\" class=\"mx-auto mb-5\">\n            <v-row class=\"mt-1 mb-1\">\n              <v-col sm=\"3\">\n                <v-img class=\"ml-4\" :src=\"restaurant.image\" :alt=\"restaurant.name\" height=\"100%\"/>\n              </v-col>\n              <v-col sm=\"9\">\n                <div class=\"restaurant-theme\">\n                  <v-card-title>\n                    <a class=\"text-decoration-none\" :href=\"/restaurants/ + nameForUrl(restaurant.name) + '/' + restaurant._id\">\n                      {{ restaurant.name }}\n                    </a>\n                  </v-card-title>\n                  <div class=\"categories\">\n                    <v-card-text v-for=\"category in restaurant.categories\" :key=\"category\">\n                      {{ category }}\n                    </v-card-text>\n                  </div>\n                </div>\n                <div class=\"restaurant-infos\">\n                  <v-card-subtitle>{{ restaurant.location.city }} ({{ restaurant.location.zipCode }}), {{ restaurant.location.address }}</v-card-subtitle>\n                  <div class=\"opening-hours\">\n                    <v-card-text>{{ restaurant.openingHours }}</v-card-text>\n                  </div>\n                </div>\n                <v-card-actions>\n                  <v-btn color=\"primary\" text @click=\"show = !show\">\n                    Détails du panier\n                    <v-icon color=\"primary\">{{ show ? 'mdi-chevron-up' : 'mdi-chevron-down' }}</v-icon>\n                  </v-btn>\n                  <v-spacer></v-spacer>\n                  <v-btn color=\"primary\" text class=\"mr-4\">\n                    <ValidateCartComponent :restaurant=\"restaurant\" :cart=\"cart.filter(item => item.restaurantId === restaurant._id)\" :total-price=\"totalPrice\"/>\n                  </v-btn>\n                  <v-btn color=\"error\" text class=\"mr-4\" @click=\"removeAllFromCart(restaurant)\">\n                    Supprimer\n                    <v-icon color=\"error\" class=\"ml-1\">mdi-close-circle</v-icon>\n                  </v-btn>\n                </v-card-actions>\n                <v-expand-transition>\n                  <div v-show=\"show\">\n                    <v-divider></v-divider>\n                    <v-simple-table v-if=\"cart.length > 0\">\n                      <template v-slot:default>\n                        <thead>\n                        <tr>\n                          <th class=\"text-left\">Nom</th>\n                          <th class=\"text-center\">Quantité</th>\n                          <th class=\"text-center\">Prix unitaire</th>\n                          <th class=\"text-center\">Prix total</th>\n                          <th class=\"text-center\">Retirer</th>\n                          <th class=\"text-center\">Supprimer</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                          <tr v-for=\"item in cart.filter(item => item.restaurantId === restaurant._id)\" :key=\"item.id\">\n                            <td>{{ item.name }}</td>\n                            <td class=\"text-center\">{{ item.quantity }}</td>\n                            <td class=\"text-center\">{{ item.price }} €</td>\n                            <td class=\"text-center\">{{ (item.quantity * item.price).toFixed(2) }} €</td>\n                            <td class=\"text-center\">\n                              <v-btn icon @click=\"removeFromCart(item)\">\n                                <v-icon color=\"primary\">mdi-minus-circle</v-icon>\n                              </v-btn>\n                            </td>\n                            <td class=\"text-center\">\n                              <v-btn icon @click=\"removeAllQuantityFromCart(item)\">\n                                <v-icon color=\"error\">mdi-close-circle</v-icon>\n                              </v-btn>\n                            </td>\n                          </tr>\n                          <tr>\n                            <td class=\"font-weight-bold\">Total</td>\n                            <td colspan=\"2\"></td>\n                            <td class=\"font-weight-bold text-center\">{{ totalPrice }} €</td>\n                            <td colspan=\"2\"></td>\n                          </tr>\n                        </tbody>\n                      </template>\n                    </v-simple-table>\n                  </div>\n                </v-expand-transition>\n              </v-col>\n            </v-row>\n          </v-card>\n        </v-col>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport $storeCart from '@/store/cart'\nimport axios from 'axios'\nimport ValidateCartComponent from '@/components/shop/ValidateCartComponent'\n\nexport default {\n  name: 'CartView',\n  components: {\n    ValidateCartComponent\n  },\n  data: () => ({\n    show: false,\n    cart: $storeCart.state.cart,\n    restaurants: []\n  }),\n  methods: {\n    nameForUrl (name) {\n      return name.toLowerCase().normalize('NFD')\n        .replace(/[^a-z0-9]+/g, '-')\n        .replace(/^-+|-+$/g, '-')\n    },\n    removeFromCart (item) {\n      this.$store.commit('removeFromCart', item)\n    },\n    removeAllQuantityFromCart (item) {\n      this.$store.commit('removeAllQuantityFromCart', item)\n    },\n    removeAllFromCart (item) {\n      this.$store.commit('removeAllFromCart', item)\n    }\n  },\n  computed: {\n    getAllRestaurants () {\n      const restaurants = []\n      for (let i = 0; i < this.cart.length; i++) {\n        const restaurant = this.restaurants.find(restaurant => restaurant._id === this.cart[i].restaurantId)\n        if (restaurant && !restaurants.includes(restaurant)) {\n          restaurants.push(restaurant)\n        }\n      }\n      return restaurants\n    },\n    totalPrice () {\n      let totalPrice = 0\n      for (const item of this.cart) {\n        totalPrice += item.totalPrice\n      }\n      return totalPrice.toFixed(2)\n    }\n  },\n  mounted () {\n    axios.get('http://localhost:4200/api/v1/restaurants/')\n      .then(response => (this.restaurants = response.data))\n      .catch(error => console.log(error))\n  }\n}\n</script>\n\n<style scoped>\n#cart-view .restaurant-theme, #cart-view .restaurant-infos {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#cart-view .restaurant-theme, #cart-view .restaurant-infos {\n  margin-right: 20px;\n}\n#cart-view .categories {\n  display: flex;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}