{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  name: 'RestaurantsView',\n  data: () => ({\n    search: {\n      searchByCity: '',\n      searchByName: '',\n      categories: []\n    },\n    pagination: {\n      pageNumber: 1,\n      pageSize: 5\n    },\n    restaurants: []\n  }),\n  methods: {\n    nameForUrl(name) {\n      return name.toLowerCase().normalize('NFD').replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '-');\n    },\n\n    nextPage(page) {\n      this.pagination.pageNumber = page;\n    },\n\n    getAllCategories(allRestaurants) {\n      const categories = [''];\n\n      for (let i = 0; i < allRestaurants.length; i++) {\n        for (let j = 0; j < allRestaurants[i].categories.length; j++) {\n          if (!categories.includes(allRestaurants[i].categories[j])) {\n            categories.push(allRestaurants[i].categories[j]);\n          }\n        }\n      }\n\n      return categories;\n    },\n\n    restaurantToDisplay(allRestaurants) {\n      const start = this.pagination.pageNumber * this.pagination.pageSize - this.pagination.pageSize;\n      const end = start + this.pagination.pageSize;\n      const filteredByCity = allRestaurants.filter(restaurant => {\n        return restaurant.location.city.toLowerCase().includes(this.search.searchByCity.toLowerCase());\n      });\n      const filteredByName = filteredByCity.filter(restaurant => {\n        return restaurant.name.toLowerCase().includes(this.search.searchByName.toLowerCase());\n      });\n      const categorizedRestaurant = [];\n\n      for (let i = 0; i < filteredByName.length; i++) {\n        for (const category of this.search.categories) {\n          if (filteredByName[i].categories.includes(category)) {\n            categorizedRestaurant.push(filteredByName[i]);\n            break;\n          }\n        }\n      }\n\n      if (categorizedRestaurant.length === 0) {\n        return filteredByName.slice(start, end);\n      }\n\n      return categorizedRestaurant.slice(start, end);\n    }\n\n  },\n  computed: {\n    pageCount() {\n      const length = this.restaurants.length;\n      const size = this.pagination.pageSize;\n      return Math.ceil(length / size);\n    }\n\n  },\n\n  mounted() {\n    axios.get('http://localhost:4200/api/v1/restaurants/').then(response => this.restaurants = response.data).catch(error => console.log(error));\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AAEA;EACAA,uBADA;EAEAC;IACAC;MACAC,gBADA;MAEAC,gBAFA;MAGAC;IAHA,CADA;IAMAC;MACAC,aADA;MAEAC;IAFA,CANA;IAUAC;EAVA,EAFA;EAcAC;IACAC;MACA,2CACAC,OADA,CACA,aADA,EACA,GADA,EAEAA,OAFA,CAEA,UAFA,EAEA,GAFA;IAGA,CALA;;IAMAC;MACA;IACA,CARA;;IASAC;MACA;;MACA;QACA;UACA;YACAT;UACA;QACA;MACA;;MACA;IACA,CAnBA;;IAoBAU;MACA;MACA;MACA;QACA;MACA,CAFA;MAGA;QACA;MACA,CAFA;MAIA;;MACA;QACA;UACA;YACAC;YACA;UACA;QACA;MACA;;MAEA;QACA;MACA;;MACA;IACA;;EA5CA,CAdA;EA4DAC;IACAC;MACA;MACA;MACA;IACA;;EALA,CA5DA;;EAmEAC;IACAC,uDACAC,IADA,CACAC,4CADA,EAEAC,KAFA,CAEAC,2BAFA;EAGA;;AAvEA","names":["name","data","search","searchByCity","searchByName","categories","pagination","pageNumber","pageSize","restaurants","methods","nameForUrl","replace","nextPage","getAllCategories","restaurantToDisplay","categorizedRestaurant","computed","pageCount","mounted","axios","then","response","catch","error"],"sourceRoot":"src/views/shop","sources":["RestaurantsView.vue"],"sourcesContent":["<template>\n  <div id=\"restaurants-view\" class=\"mt-3 mb-8\">\n    <v-container class=\"pr-0 pl-0\">\n      <v-row id=\"search-bars\">\n        <v-col sm=\"12\" md=\"12\" lg=\"3\">\n          <h2>Offres du moment</h2>\n        </v-col>\n        <v-col md=\"6\" lg=\"4\" >\n          <v-text-field hide-details v-model=\"search.searchByCity\" prepend-icon=\"mdi-magnify\" placeholder=\"Ville...\" single-line></v-text-field>\n        </v-col>\n        <v-col md=\"6\" lg=\"4\">\n          <v-text-field hide-details v-model=\"search.searchByName\" prepend-icon=\"mdi-magnify\" placeholder=\"Restaurant...\" single-line></v-text-field>\n        </v-col>\n      </v-row>\n\n      <v-row>\n        <v-col md=\"12\" lg=\"3\">\n          <v-card class=\"ma-auto\" max-width=\"80%\">\n            <v-list>\n              <v-list-item>Cat√©gories :</v-list-item>\n                <template v-for=\"(category, i) in getAllCategories(restaurants)\">\n                  <v-divider v-if=\"!category\" :key=\"`divider-${i}`\"></v-divider>\n                  <v-list-item v-else :key=\"`item-${i}`\" :value=\"category\" active-class=\"text--accent-4\">\n                    <v-checkbox v-model=\"search.categories\" :label=\"category\" :value=\"category\"></v-checkbox>\n                  </v-list-item>\n                </template>\n            </v-list>\n          </v-card>\n        </v-col>\n\n        <v-col md=\"12\" lg=\"9\">\n          <v-card v-for=\"restaurant in restaurantToDisplay(restaurants)\" :key=\"restaurant.name\"\n            elevation=\"2\" outlined class=\"restaurant-cards mb-5\">\n            <router-link :to=\"/restaurants/ + nameForUrl(restaurant.name) + '/' + restaurant._id\" class=\"text-decoration-none\">\n              <v-row>\n                <v-col sm=\"3\">\n                  <v-img :src=\"restaurant.image\" :alt=\"restaurant.name\" height=\"100%\"/>\n                </v-col>\n                <v-col sm=\"9\">\n                  <div class=\"restaurant-theme\">\n                    <v-card-title>{{ restaurant.name }}</v-card-title>\n                    <div class=\"categories\">\n                      <v-card-text v-for=\"category in restaurant.categories\" :key=\"category\">\n                        {{ category }}\n                      </v-card-text>\n                    </div>\n                  </div>\n                  <v-card-subtitle class=\"text-justify\">{{ restaurant.description }}</v-card-subtitle>\n                  <div class=\"restaurant-infos\">\n                    <v-card-subtitle>{{ restaurant.location.city }} ({{ restaurant.location.zipCode }}), {{ restaurant.location.address }}</v-card-subtitle>\n                    <div class=\"opening-hours\">\n                      <v-card-text>{{ restaurant.openingHours }}</v-card-text>\n                    </div>\n                  </div>\n                </v-col>\n              </v-row>\n            </router-link>\n          </v-card>\n        </v-col>\n      </v-row>\n      <div class=\"text-center\" v-if=\"pageCount > 1\">\n        <v-pagination v-model=\"pagination.pageNumber\" :length=\"pageCount\" @input=\"nextPage\"/>\n      </div>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  name: 'RestaurantsView',\n  data: () => ({\n    search: {\n      searchByCity: '',\n      searchByName: '',\n      categories: []\n    },\n    pagination: {\n      pageNumber: 1,\n      pageSize: 5\n    },\n    restaurants: []\n  }),\n  methods: {\n    nameForUrl (name) {\n      return name.toLowerCase().normalize('NFD')\n        .replace(/[^a-z0-9]+/g, '-')\n        .replace(/^-+|-+$/g, '-')\n    },\n    nextPage (page) {\n      this.pagination.pageNumber = page\n    },\n    getAllCategories (allRestaurants) {\n      const categories = ['']\n      for (let i = 0; i < allRestaurants.length; i++) {\n        for (let j = 0; j < allRestaurants[i].categories.length; j++) {\n          if (!categories.includes(allRestaurants[i].categories[j])) {\n            categories.push(allRestaurants[i].categories[j])\n          }\n        }\n      }\n      return categories\n    },\n    restaurantToDisplay (allRestaurants) {\n      const start = this.pagination.pageNumber * this.pagination.pageSize - this.pagination.pageSize\n      const end = start + this.pagination.pageSize\n      const filteredByCity = allRestaurants.filter(restaurant => {\n        return restaurant.location.city.toLowerCase().includes(this.search.searchByCity.toLowerCase())\n      })\n      const filteredByName = filteredByCity.filter(restaurant => {\n        return restaurant.name.toLowerCase().includes(this.search.searchByName.toLowerCase())\n      })\n\n      const categorizedRestaurant = []\n      for (let i = 0; i < filteredByName.length; i++) {\n        for (const category of this.search.categories) {\n          if (filteredByName[i].categories.includes(category)) {\n            categorizedRestaurant.push(filteredByName[i])\n            break\n          }\n        }\n      }\n\n      if (categorizedRestaurant.length === 0) {\n        return filteredByName.slice(start, end)\n      }\n      return categorizedRestaurant.slice(start, end)\n    }\n  },\n  computed: {\n    pageCount () {\n      const length = this.restaurants.length\n      const size = this.pagination.pageSize\n      return Math.ceil(length / size)\n    }\n  },\n  mounted () {\n    axios.get('http://localhost:4200/api/v1/restaurants/')\n      .then(response => (this.restaurants = response.data))\n      .catch(error => console.log(error))\n  }\n}\n</script>\n\n<style scoped>\n@media (max-width: 1150px) {\n  #restaurants-view #search-bars {\n    margin: auto;\n    width: 80%;\n  }\n}\n#restaurants-view .restaurant-cards {\n  max-width: 90%;\n}\n@media (max-width: 1264px) {\n  #restaurants-view .restaurant-cards {\n    max-width: 80%;\n    margin: auto;\n  }\n}\n#restaurants-view .restaurant-theme, #restaurants-view .restaurant-infos {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n#restaurants-view .restaurant-theme, #restaurants-view .restaurant-infos {\n  margin-right: 20px;\n}\n#restaurants-view .categories {\n  display: flex;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}