{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport MenusComponent from '@/components/shop/MenusComponent.vue';\nimport ProductsComponent from '@/components/shop/ProductsComponent.vue';\nexport default {\n  name: 'ProductsView',\n  components: {\n    MenusComponent,\n    ProductsComponent\n  },\n  data: () => ({\n    restaurant: {},\n    restaurants: [],\n    menus: [],\n    products: []\n  }),\n  methods: {\n    checkProductsByRestaurant(category) {\n      for (let i = 0; i < this.products.length; i++) {\n        if (this.products[i].categories.includes(category) && this.products[i].restaurantId === this.restaurant._id) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n  },\n  computed: {\n    checkMenusByRestaurant() {\n      for (let i = 0; i < this.menus.length; i++) {\n        if (this.menus[i].restaurantId === this.restaurant._id) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    getAllCategories() {\n      const categories = [];\n\n      for (let i = 0; i < this.products.length; i++) {\n        const productCategories = this.products[i].categories;\n\n        for (let j = 0; j < productCategories.length; j++) {\n          if (!categories.includes(productCategories[j])) {\n            categories.push(productCategories[j]);\n          }\n        }\n      }\n\n      return categories;\n    }\n\n  },\n\n  mounted() {\n    axios.get('http://localhost:4200/api/v1/restaurants/').then(response => this.restaurants = response.data).catch(error => console.log(error));\n    axios.get('http://localhost:4200/api/v1/restaurants/' + this.$route.params.id).then(response => this.restaurant = response.data).catch(error => console.log(error));\n    axios.get('http://localhost:4600/api/v1/menus/').then(response => this.menus = response.data).catch(error => console.log(error));\n    axios.get('http://localhost:4500/api/v1/products/').then(response => this.products = response.data).catch(error => console.log(error));\n  }\n\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;AAEA;EACAA,oBADA;EAEAC;IACAC,cADA;IAEAC;EAFA,CAFA;EAMAC;IACAC,cADA;IAEAC,eAFA;IAGAC,SAHA;IAIAC;EAJA,EANA;EAYAC;IACAC;MACA;QACA;UACA;QACA;MACA;;MACA;IACA;;EARA,CAZA;EAsBAC;IACAC;MACA;QACA;UACA;QACA;MACA;;MACA;IACA,CARA;;IASAC;MACA;;MACA;QACA;;QACA;UACA;YACAC;UACA;QACA;MACA;;MACA;IACA;;EApBA,CAtBA;;EA4CAC;IACAC,uDACAC,IADA,CACAC,4CADA,EAEAC,KAFA,CAEAC,2BAFA;IAGAJ,+EACAC,IADA,CACAC,2CADA,EAEAC,KAFA,CAEAC,2BAFA;IAGAJ,iDACAC,IADA,CACAC,sCADA,EAEAC,KAFA,CAEAC,2BAFA;IAGAJ,oDACAC,IADA,CACAC,yCADA,EAEAC,KAFA,CAEAC,2BAFA;EAGA;;AAzDA","names":["name","components","MenusComponent","ProductsComponent","data","restaurant","restaurants","menus","products","methods","checkProductsByRestaurant","computed","checkMenusByRestaurant","getAllCategories","categories","mounted","axios","then","response","catch","error"],"sourceRoot":"src/views/shop","sources":["ProductsView.vue"],"sourcesContent":["<template>\n  <div id=\"products-view\" class=\"mt-3 mb-8\">\n    <v-container class=\"pr-0 pl-0\">\n      <h2>Notre s√©lection chez {{ restaurant.name }}</h2>\n      <v-row>\n        <MenusComponent class=\"mt-3\" v-if=\"checkMenusByRestaurant\" :restaurant=\"restaurant\" :menus=\"menus\" :modif=\"false\"/>\n      </v-row>\n      <v-row v-for=\"category in getAllCategories\" :key=\"category\">\n        <ProductsComponent class=\"mt-3\" v-if=\"checkProductsByRestaurant(category)\" :restaurant=\"restaurant\" :products=\"products\" :category=\"category\" :modif=\"false\"/>\n      </v-row>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport MenusComponent from '@/components/shop/MenusComponent.vue'\nimport ProductsComponent from '@/components/shop/ProductsComponent.vue'\n\nexport default {\n  name: 'ProductsView',\n  components: {\n    MenusComponent,\n    ProductsComponent\n  },\n  data: () => ({\n    restaurant: {},\n    restaurants: [],\n    menus: [],\n    products: []\n  }),\n  methods: {\n    checkProductsByRestaurant (category) {\n      for (let i = 0; i < this.products.length; i++) {\n        if (this.products[i].categories.includes(category) && this.products[i].restaurantId === this.restaurant._id) {\n          return true\n        }\n      }\n      return false\n    }\n  },\n  computed: {\n    checkMenusByRestaurant () {\n      for (let i = 0; i < this.menus.length; i++) {\n        if (this.menus[i].restaurantId === this.restaurant._id) {\n          return true\n        }\n      }\n      return false\n    },\n    getAllCategories () {\n      const categories = []\n      for (let i = 0; i < this.products.length; i++) {\n        const productCategories = this.products[i].categories\n        for (let j = 0; j < productCategories.length; j++) {\n          if (!categories.includes(productCategories[j])) {\n            categories.push(productCategories[j])\n          }\n        }\n      }\n      return categories\n    }\n  },\n  mounted () {\n    axios.get('http://localhost:4200/api/v1/restaurants/')\n      .then(response => (this.restaurants = response.data))\n      .catch(error => console.log(error))\n    axios.get('http://localhost:4200/api/v1/restaurants/' + this.$route.params.id)\n      .then(response => (this.restaurant = response.data))\n      .catch(error => console.log(error))\n    axios.get('http://localhost:4600/api/v1/menus/')\n      .then(response => (this.menus = response.data))\n      .catch(error => console.log(error))\n    axios.get('http://localhost:4500/api/v1/products/')\n      .then(response => (this.products = response.data))\n      .catch(error => console.log(error))\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}